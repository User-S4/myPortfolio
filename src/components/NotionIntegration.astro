---
/*
  This component would handle the actual integration with Notion API.
  In a real application, you would need to:
  
  1. Set up a Notion integration and get an API token
  2. Configure the database or page you want to pull content from
  3. Use the Notion API client to fetch and format content
  
  Below is a simplified example of what this might look like:
*/
---

<div class="bg-white dark:bg-neutral-800 rounded-xl p-6 shadow-md">
  <h2 class="text-xl font-bold mb-4">Notion Integration</h2>
  <p class="text-neutral-600 dark:text-neutral-400">
    This component can be used for fetching blog posts directly from Notion.
    To set up the integration:
  </p>
  
  <ol class="mt-4 space-y-2 text-neutral-600 dark:text-neutral-400 list-decimal list-inside">
    <li>Create a Notion integration at <a href="https://www.notion.so/my-integrations" target="_blank" rel="noopener noreferrer" class="text-primary-500 hover:underline">notion.so/my-integrations</a></li>
    <li>Share a Notion database with your integration</li>
    <li>Configure the database with appropriate properties (title, content, tags, etc.)</li>
    <li>Use the Notion API client to fetch and format content</li>
  </ol>
  
  <div class="mt-6 bg-neutral-100 dark:bg-neutral-700 p-4 rounded-lg">
    <code class="text-sm text-neutral-800 dark:text-neutral-200 block">
      <pre>// Example code for fetching data from Notion
import { Client } from "@notionhq/client"

const notion = new Client({
  auth: import.meta.env.NOTION_API_KEY,
})

export async function getNotionPosts() {
  const databaseId = import.meta.env.NOTION_DATABASE_ID
  
  const response = await notion.databases.query({
    database_id: databaseId,
    sorts: [
      {
        property: "Created",
        direction: "descending",
      },
    ],
  })
  
  return response.results
}</pre>
    </code>
  </div>
</div>